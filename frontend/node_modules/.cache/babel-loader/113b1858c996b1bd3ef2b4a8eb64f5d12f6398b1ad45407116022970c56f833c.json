{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { CommentService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\nexport const getCommentAction = createAsyncThunk(\"comment/all\", async thunkAPI => {\n  try {\n    const response = await CommentService.getAllComments();\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const createCommentAction = createAsyncThunk(\"comment/create\", async (body, thunkAPI) => {\n  try {\n    const response = await CommentService.createComment(body);\n    toast.success(\"created successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateCommentAction = createAsyncThunk(\"comment/update\", async (_ref, thunkAPI) => {\n  let {\n    body,\n    id\n  } = _ref;\n  try {\n    const response = await CommentService.updateComment(body, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateCommentActionAdmin = createAsyncThunk(\"comment/admin/update\", async (_ref2, thunkAPI) => {\n  let {\n    body,\n    status,\n    id\n  } = _ref2;\n  try {\n    const response = await CommentService.updateCommentAdmin(body, status, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const deleteCommentAction = createAsyncThunk(\"comment/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CommentService.deleteComment(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst initialState = {\n  isLoading: true,\n  commentsData: []\n};\nconst commentSlice = createSlice({\n  name: \"comment\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // get all categories cases\n    builder.addCase(getCommentAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(getCommentAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.commentsData = action.payload;\n    });\n    builder.addCase(getCommentAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // create comment cases\n    builder.addCase(createCommentAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(createCommentAction.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(createCommentAction.rejected, state => {\n      state.isLoading = false;\n    });\n\n    // update comment cases\n    builder.addCase(updateCommentAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCommentAction.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(updateCommentAction.rejected, state => {\n      state.isLoading = false;\n    });\n\n    // update admin comment cases\n    builder.addCase(updateCommentAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCommentAction.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(updateCommentAction.rejected, state => {\n      state.isLoading = false;\n    });\n\n    // delete comment cases\n    builder.addCase(deleteCommentAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(deleteCommentAction.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(deleteCommentAction.rejected, state => {\n      state.isLoading = false;\n    });\n  }\n});\nconst {\n  reducer\n} = commentSlice;\nexport default reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","toast","CommentService","formatErrorResponse","getCommentAction","thunkAPI","response","getAllComments","data","error","message","rejectWithValue","createCommentAction","body","createComment","success","updateCommentAction","_ref","id","updateComment","updateCommentActionAdmin","_ref2","status","updateCommentAdmin","deleteCommentAction","deleteComment","initialState","isLoading","commentsData","commentSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/redux/slices/comment.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { CommentService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\n\nexport const getCommentAction = createAsyncThunk(\"comment/all\", async (thunkAPI) => {\n  try {\n    const response = await CommentService.getAllComments();\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const createCommentAction = createAsyncThunk(\"comment/create\", async (body, thunkAPI) => {\n  try {\n    const response = await CommentService.createComment(body);\n    toast.success(\"created successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const updateCommentAction = createAsyncThunk(\"comment/update\", async ({body, id}, thunkAPI) => {\n  try {\n    const response = await CommentService.updateComment(body, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const updateCommentActionAdmin = createAsyncThunk(\"comment/admin/update\", async ({body, status, id}, thunkAPI) => {\n  try {\n    const response = await CommentService.updateCommentAdmin(body, status, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const deleteCommentAction = createAsyncThunk(\"comment/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CommentService.deleteComment(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nconst initialState = {\n  isLoading: true,\n  commentsData: [],\n};\n\nconst commentSlice = createSlice({\n  name: \"comment\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // get all categories cases\n    builder.addCase(getCommentAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(getCommentAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.commentsData = action.payload;\n    });\n    builder.addCase(getCommentAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // create comment cases\n    builder.addCase(createCommentAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(createCommentAction.fulfilled, (state) => {\n      state.isLoading = false;\n    });\n    builder.addCase(createCommentAction.rejected, (state) => {\n      state.isLoading = false;\n    });\n\n    // update comment cases\n    builder.addCase(updateCommentAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCommentAction.fulfilled, (state) => {\n      state.isLoading = false;\n    });\n    builder.addCase(updateCommentAction.rejected, (state) => {\n      state.isLoading = false;\n    });\n\n    // update admin comment cases\n    builder.addCase(updateCommentAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCommentAction.fulfilled, (state) => {\n      state.isLoading = false;\n    });\n    builder.addCase(updateCommentAction.rejected, (state) => {\n      state.isLoading = false;\n    });\n\n    // delete comment cases\n    builder.addCase(deleteCommentAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(deleteCommentAction.fulfilled, (state) => {\n      state.isLoading = false;\n    });\n    builder.addCase(deleteCommentAction.rejected, (state) => {\n      state.isLoading = false;\n    });\n  },\n});\n\nconst { reducer } = commentSlice;\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}