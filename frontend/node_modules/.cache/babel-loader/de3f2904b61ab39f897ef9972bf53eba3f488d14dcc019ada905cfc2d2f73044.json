{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/components/dashboard/category/Category.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DashboardPanel from \"../DashboardPanel\";\nimport Input from \"../../primitives/Input/Input\";\nimport Button from \"../../primitives/Button/Button\";\nimport \"./category.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Category() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [created, setCreated] = useState(\"\");\n  const [currentCategoryId, setCurrentCategoryId] = useState(\"\");\n  const [buttonText, setButtonText] = useState(\"Create\");\n  const apiUrl = \"https://example.com/categories\";\n  useEffect(() => {\n    fetch(apiUrl).then(response => response.json()).then(data => setCategories(data));\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (buttonText === \"Create\") {\n      // Create a new category\n      fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title\n        })\n      }).then(response => response.json()).then(data => {\n        setCategories([...categories, data]);\n        setTitle(\"\");\n      }).catch(error => console.error(error));\n    } else {\n      // Update an existing category\n      fetch(`${apiUrl}/${currentCategoryId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          created\n        })\n      }).then(response => response.json()).then(data => {\n        setCategories(categories.map(category => category.id === data.id ? data : category));\n        setTitle(\"\");\n        setCreated(\"\");\n        setButtonText(\"Create\");\n      }).catch(error => console.error(error));\n    }\n  };\n  const handleEdit = categoryId => {\n    const category = categories.find(category => category.id === categoryId);\n    setTitle(category.title);\n    setCreated(category.created);\n    setCurrentCategoryId(category.id);\n    setButtonText(\"Edit\");\n  };\n  const handleDelete = categoryId => {\n    fetch(`${apiUrl}/${categoryId}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setCategories(categories.filter(category => category.id !== categoryId));\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: title,\n          onChange: event => setTitle(event.target.value),\n          className: \"Category__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"Category__button\",\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"Category__table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: category.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: category.created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(category.id),\n                className: \"Category__editButton\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(category.id),\n                className: \"Category__deleteButton\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, category.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Category, \"E+WQpjXOBKaY68Gf2WvOBEF0lfM=\");\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useState","useEffect","DashboardPanel","Input","Button","jsxDEV","_jsxDEV","Category","_s","categories","setCategories","title","setTitle","created","setCreated","currentCategoryId","setCurrentCategoryId","buttonText","setButtonText","apiUrl","fetch","then","response","json","data","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","catch","error","console","map","category","id","handleEdit","categoryId","find","handleDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/components/dashboard/category/Category.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DashboardPanel from \"../DashboardPanel\";\nimport Input from \"../../primitives/Input/Input\";\nimport Button from \"../../primitives/Button/Button\";\nimport \"./category.scss\";\n\nfunction Category() {\n  const [categories, setCategories] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [created, setCreated] = useState(\"\");\n  const [currentCategoryId, setCurrentCategoryId] = useState(\"\");\n  const [buttonText, setButtonText] = useState(\"Create\");\n\n  const apiUrl = \"https://example.com/categories\";\n\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => setCategories(data));\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (buttonText === \"Create\") {\n      // Create a new category\n      fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setCategories([...categories, data]);\n          setTitle(\"\");\n        })\n        .catch((error) => console.error(error));\n    } else {\n      // Update an existing category\n      fetch(`${apiUrl}/${currentCategoryId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ title, created }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setCategories(\n            categories.map((category) =>\n              category.id === data.id ? data : category\n            )\n          );\n          setTitle(\"\");\n          setCreated(\"\");\n          setButtonText(\"Create\");\n        })\n        .catch((error) => console.error(error));\n    }\n  };\n\n  const handleEdit = (categoryId) => {\n    const category = categories.find((category) => category.id === categoryId);\n    setTitle(category.title);\n    setCreated(category.created);\n    setCurrentCategoryId(category.id);\n    setButtonText(\"Edit\");\n  };\n\n  const handleDelete = (categoryId) => {\n    fetch(`${apiUrl}/${categoryId}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        setCategories(\n          categories.filter((category) => category.id !== categoryId)\n        );\n      })\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div className=\"center\">\n      <DashboardPanel />\n      <div className=\"category\">\n        <h1>Categories</h1>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"title\">Title:</label>\n          <Input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n            className=\"Category__input\"\n          />\n          <Button type=\"submit\" className=\"Category__button\">\n            {buttonText}\n          </Button>\n        </form>\n        <table className=\"Category__table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Created</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {categories.map((category) => (\n              <tr key={category.id}>\n                <td>{category.title}</td>\n                <td>{category.created}</td>\n                <td>\n                  <button\n                    onClick={() => handleEdit(category.id)}\n                    className=\"Category__editButton\"\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    onClick={() => handleDelete(category.id)}\n                    className=\"Category__deleteButton\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Category;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}