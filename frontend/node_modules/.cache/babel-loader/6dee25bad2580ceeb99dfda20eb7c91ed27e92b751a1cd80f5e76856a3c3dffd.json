{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { PostService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\nexport const getPostsAction = createAsyncThunk(\"post/all\", async thunkAPI => {\n  try {\n    const data = await PostService.getAllPosts();\n    return data.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const createPostAction = createAsyncThunk(\"auth/register\", async (_ref, thunkAPI) => {\n  let {\n    name,\n    email,\n    password,\n    avarter\n  } = _ref;\n  try {\n    var _data$data;\n    const data = await PostService.createPost(name, email, password, avarter);\n    if (data !== null && data !== void 0 && (_data$data = data.data) !== null && _data$data !== void 0 && _data$data.token) {\n      localStorage.setItem(\"token\", JSON.stringify(data.data.token));\n    }\n    toast.success(\"user created successfully\");\n    console.log(data, \"reg\");\n    return data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    console.log(error, \"error\");\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateCategoryAction = createAsyncThunk(\"category/update\", async (_ref2, thunkAPI) => {\n  let {\n    title,\n    id\n  } = _ref2;\n  try {\n    const response = await CategoryService.updateCategory(title, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const deleteCategoryAction = createAsyncThunk(\"category/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CategoryService.deleteCategory(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst initialState = {\n  isLoading: true,\n  postsData: []\n};\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getPostsAction.pending, state => {\n      state.isLoading = true;\n      state.postsData = [];\n    });\n    builder.addCase(getPostsAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.postsData = action.payload;\n    });\n    builder.addCase(getPostsAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n  }\n});\nconst {\n  reducer\n} = postSlice;\nexport default reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","toast","PostService","formatErrorResponse","getPostsAction","thunkAPI","data","getAllPosts","error","message","rejectWithValue","createPostAction","_ref","name","email","password","avarter","_data$data","createPost","token","localStorage","setItem","JSON","stringify","success","console","log","updateCategoryAction","_ref2","title","id","response","CategoryService","updateCategory","deleteCategoryAction","deleteCategory","initialState","isLoading","postsData","postSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/redux/slices/post.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { PostService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\n\nexport const getPostsAction = createAsyncThunk(\"post/all\", async (thunkAPI) => {\n  try {\n    const data = await PostService.getAllPosts();\n    return data.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const createPostAction = createAsyncThunk(\n  \"auth/register\",\n  async ({ name, email, password, avarter }, thunkAPI) => {\n    try {\n      const data = await PostService.createPost(name, email, password, avarter);\n      if (data?.data?.token) {\n        localStorage.setItem(\"token\", JSON.stringify(data.data.token));\n      }\n      toast.success(\"user created successfully\");\n      console.log(data, \"reg\");\n      return data;\n    } catch (error) {\n      const message = formatErrorResponse(error);\n      console.log(error, \"error\");\n      toast.error(message);\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const updateCategoryAction = createAsyncThunk(\"category/update\", async ({title, id}, thunkAPI) => {\n  try {\n    const response = await CategoryService.updateCategory(title, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const deleteCategoryAction = createAsyncThunk(\"category/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CategoryService.deleteCategory(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n\nconst initialState = {\n  isLoading: true,\n  postsData: [],\n};\n\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getPostsAction.pending, (state) => {\n      state.isLoading = true;\n      state.postsData = []\n    });\n    builder.addCase(getPostsAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.postsData = action.payload;\n    });\n    builder.addCase(getPostsAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n  },\n});\n\nconst { reducer } = postSlice;\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}