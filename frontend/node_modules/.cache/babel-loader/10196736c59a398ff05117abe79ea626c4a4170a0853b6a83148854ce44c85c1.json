{"ast":null,"code":"import axios from \"axios\";\nimport { devEnv } from \"../configs/environment.config\";\nimport { GET_ALL_POSTS, GET_ONE_POST, NEW_POST, UPDATE_POST, DELETE_POST } from \"./CONSTANTS\";\nexport const getAllPosts = async () => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const getSinglePosts = async id => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ONE_POST}/${id}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const updatePost = async (title, content, image, id, tagIds, categoryId) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${UPDATE_POST}/${id}${tagIds}${categoryId}`,\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    data: {\n      title,\n      content,\n      image\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const createPost = async (title, content, image, tagIds, categoryId) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${NEW_POST}${tagIds}${categoryId}`,\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    data: {\n      title,\n      content,\n      image\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const searchPost = async keyword => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}?keyword=${keyword}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  console.log(keyword, \"key\");\n  return await axios(config);\n};\nexport const deletePosts = async id => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${DELETE_POST}/${id}`,\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};","map":{"version":3,"names":["axios","devEnv","GET_ALL_POSTS","GET_ONE_POST","NEW_POST","UPDATE_POST","DELETE_POST","getAllPosts","config","url","API_BASE_URL","method","headers","withCredentials","getSinglePosts","id","updatePost","title","content","image","tagIds","categoryId","data","createPost","searchPost","keyword","console","log","deletePosts"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/services/post.service.js"],"sourcesContent":["import axios from \"axios\";\nimport { devEnv } from \"../configs/environment.config\";\nimport {\n  GET_ALL_POSTS,\n  GET_ONE_POST,\n  NEW_POST,\n  UPDATE_POST,\n  DELETE_POST,\n} from \"./CONSTANTS\";\n\nexport const getAllPosts = async () => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n\nexport const getSinglePosts = async (id) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ONE_POST}/${id}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n\nexport const updatePost = async (\n  title,\n  content,\n  image,\n  id,\n  tagIds,\n  categoryId\n) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${UPDATE_POST}/${id}${tagIds}${categoryId}`,\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n    data: {\n      title,\n      content,\n      image,\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n\nexport const createPost = async (title, content, image, tagIds, categoryId) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${NEW_POST}${tagIds}${categoryId}`,\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n    data: {\n      title,\n      content,\n      image,\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\nexport const searchPost = async (keyword) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}?keyword=${keyword}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n  console.log(keyword, \"key\")\n\n  return await axios(config);\n};\n\nexport const deletePosts = async (id) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${DELETE_POST}/${id}`,\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,+BAA+B;AACtD,SACEC,aAAa,EACbC,YAAY,EACZC,QAAQ,EACRC,WAAW,EACXC,WAAW,QACN,aAAa;AAEpB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAER,aAAc,EAAC;IAC7CS,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,MAAMP,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEP,YAAa,IAAGY,EAAG,EAAC;IAClDJ,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CACxBC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLJ,EAAE,EACFK,MAAM,EACNC,UAAU,KACP;EACH,MAAMb,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEL,WAAY,IAAGU,EAAG,GAAEK,MAAO,GAAEC,UAAW,EAAC;IACvEV,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDU,IAAI,EAAE;MACJL,KAAK;MACLC,OAAO;MACPC;IACF,CAAC;IACDN,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMe,UAAU,GAAG,MAAAA,CAAON,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,KAAK;EAC7E,MAAMb,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEN,QAAS,GAAEgB,MAAO,GAAEC,UAAW,EAAC;IAC9DV,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDU,IAAI,EAAE;MACJL,KAAK;MACLC,OAAO;MACPC;IACF,CAAC;IACDN,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AACD,OAAO,MAAMgB,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,MAAMjB,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAER,aAAc,YAAWuB,OAAQ,EAAC;IAChEd,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EACDa,OAAO,CAACC,GAAG,CAACF,OAAO,EAAE,KAAK,CAAC;EAE3B,OAAO,MAAMzB,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMoB,WAAW,GAAG,MAAOb,EAAE,IAAK;EACvC,MAAMP,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEJ,WAAY,IAAGS,EAAG,EAAC;IACjDJ,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}