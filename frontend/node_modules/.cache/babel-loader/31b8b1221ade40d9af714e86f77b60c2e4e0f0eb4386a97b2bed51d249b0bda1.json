{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { PostService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\nexport const getPostsAction = createAsyncThunk(\"post/all\", async thunkAPI => {\n  try {\n    const data = await PostService.getAllPosts();\n    return data.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const createPostAction = createAsyncThunk(\"post/create\", async (_ref, thunkAPI) => {\n  let {\n    title,\n    content,\n    image\n  } = _ref;\n  try {\n    const response = await PostService.createPost(title, content, image);\n    toast.success(\"post created successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    console.log(error, \"error\");\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateCategoryAction = createAsyncThunk(\"category/update\", async (_ref2, thunkAPI) => {\n  let {\n    title,\n    id\n  } = _ref2;\n  try {\n    const response = await CategoryService.updateCategory(title, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const deleteCategoryAction = createAsyncThunk(\"category/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CategoryService.deleteCategory(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst initialState = {\n  isLoading: true,\n  postsData: []\n};\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // All post cases\n    builder.addCase(getPostsAction.pending, state => {\n      state.isLoading = true;\n      state.postsData = [];\n    });\n    builder.addCase(getPostsAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.postsData = action.payload;\n    });\n    builder.addCase(getPostsAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // create category cases\n    builder.addCase(createCategoryAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(createCategoryAction.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(createCategoryAction.rejected, state => {\n      state.isLoading = false;\n    });\n\n    // update category cases\n    builder.addCase(updateCategoryAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCategoryAction.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(updateCategoryAction.rejected, state => {\n      state.isLoading = false;\n    });\n\n    // delete category cases\n    builder.addCase(deleteCategoryAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(deleteCategoryAction.fulfilled, state => {\n      state.isLoading = false;\n    });\n    builder.addCase(deleteCategoryAction.rejected, state => {\n      state.isLoading = false;\n    });\n  }\n});\nconst {\n  reducer\n} = postSlice;\nexport default reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","toast","PostService","formatErrorResponse","getPostsAction","thunkAPI","data","getAllPosts","error","message","rejectWithValue","createPostAction","_ref","title","content","image","response","createPost","success","console","log","updateCategoryAction","_ref2","id","CategoryService","updateCategory","deleteCategoryAction","deleteCategory","initialState","isLoading","postsData","postSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","createCategoryAction","reducer"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/redux/slices/post.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { PostService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\n\nexport const getPostsAction = createAsyncThunk(\"post/all\", async (thunkAPI) => {\n  try {\n    const data = await PostService.getAllPosts();\n    return data.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const createPostAction = createAsyncThunk(\n  \"post/create\",\n  async ({ title, content, image }, thunkAPI) => {\n    try {\n      const response = await PostService.createPost(title, content, image);\n      toast.success(\"post created successfully\");\n      return response.data;\n    } catch (error) {\n      const message = formatErrorResponse(error);\n      console.log(error, \"error\");\n      toast.error(message);\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const updateCategoryAction = createAsyncThunk(\"category/update\", async ({title, id}, thunkAPI) => {\n  try {\n    const response = await CategoryService.updateCategory(title, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const deleteCategoryAction = createAsyncThunk(\"category/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CategoryService.deleteCategory(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n\nconst initialState = {\n  isLoading: true,\n  postsData: [],\n};\n\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // All post cases\n    builder.addCase(getPostsAction.pending, (state) => {\n      state.isLoading = true;\n      state.postsData = []\n    });\n    builder.addCase(getPostsAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.postsData = action.payload;\n    });\n    builder.addCase(getPostsAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n\n    // create category cases\n    builder.addCase(createCategoryAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(createCategoryAction.fulfilled, (state) => {\n      state.isLoading = false;\n    });\n    builder.addCase(createCategoryAction.rejected, (state) => {\n      state.isLoading = false;\n    });\n\n    // update category cases\n    builder.addCase(updateCategoryAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCategoryAction.fulfilled, (state) => {\n      state.isLoading = false;\n    });\n    builder.addCase(updateCategoryAction.rejected, (state) => {\n      state.isLoading = false;\n    });\n\n    // delete category cases\n    builder.addCase(deleteCategoryAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(deleteCategoryAction.fulfilled, (state) => {\n      state.isLoading = false;\n    });\n    builder.addCase(deleteCategoryAction.rejected, (state) => {\n      state.isLoading = false;\n    });\n  },\n});\n\nconst { reducer } = postSlice;\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}