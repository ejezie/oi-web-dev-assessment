{"ast":null,"code":"import axios from \"axios\";\nimport { devEnv } from \"../configs/environment.config\";\nimport { GET_ALL_COMMENT, NEW_COMMENT, UPDATE_COMMENT, DELETE_COMMENT, UPDATE_COMMENT_ADMIN } from \"./CONSTANTS\";\nexport const getAllComments = async () => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_COMMENT}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const updateComment = async (body, id) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${UPDATE_COMMENT}/${id}`,\n    method: \"put\",\n    data: {\n      body\n    },\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const updateCommentAdmin = async (body, status, id) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${UPDATE_COMMENT_ADMIN}/${id}`,\n    method: \"put\",\n    data: {\n      body,\n      status\n    },\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const createComment = async body => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${NEW_COMMENT}`,\n    method: \"post\",\n    data: {\n      body\n    },\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};\nexport const deleteComment = async id => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${DELETE_COMMENT}/${id}`,\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n  };\n  return await axios(config);\n};","map":{"version":3,"names":["axios","devEnv","GET_ALL_COMMENT","NEW_COMMENT","UPDATE_COMMENT","DELETE_COMMENT","UPDATE_COMMENT_ADMIN","getAllComments","config","url","API_BASE_URL","method","headers","withCredentials","updateComment","body","id","data","updateCommentAdmin","status","createComment","deleteComment"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/services/comment.service.js"],"sourcesContent":["import axios from \"axios\";\nimport { devEnv } from \"../configs/environment.config\";\nimport {\n  GET_ALL_COMMENT,\n  NEW_COMMENT,\n  UPDATE_COMMENT,\n  DELETE_COMMENT,\n  UPDATE_COMMENT_ADMIN,\n} from \"./CONSTANTS\";\n\nexport const getAllComments = async () => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_COMMENT}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n\n\nexport const updateComment = async (body, id) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${UPDATE_COMMENT}/${id}`,\n    method: \"put\",\n    data: {body},\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n\nexport const updateCommentAdmin = async (body, status, id) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${UPDATE_COMMENT_ADMIN}/${id}`,\n    method: \"put\",\n    data: {body, status},\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n\nexport const createComment = async (body) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${NEW_COMMENT}`,\n    method: \"post\",\n    data: { body },\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n\nexport const deleteComment = async (id) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${DELETE_COMMENT}/${id}`,\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    withCredentials: true,\n  };\n\n  return await axios(config);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,+BAA+B;AACtD,SACEC,eAAe,EACfC,WAAW,EACXC,cAAc,EACdC,cAAc,EACdC,oBAAoB,QACf,aAAa;AAEpB,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAER,eAAgB,EAAC;IAC/CS,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAGD,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,EAAE,KAAK;EAC/C,MAAMR,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEN,cAAe,IAAGY,EAAG,EAAC;IACpDL,MAAM,EAAE,KAAK;IACbM,IAAI,EAAE;MAACF;IAAI,CAAC;IACZH,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAG,MAAAA,CAAOH,IAAI,EAAEI,MAAM,EAAEH,EAAE,KAAK;EAC5D,MAAMR,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEJ,oBAAqB,IAAGU,EAAG,EAAC;IAC1DL,MAAM,EAAE,KAAK;IACbM,IAAI,EAAE;MAACF,IAAI;MAAEI;IAAM,CAAC;IACpBP,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMY,aAAa,GAAG,MAAOL,IAAI,IAAK;EAC3C,MAAMP,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEP,WAAY,EAAC;IAC3CQ,MAAM,EAAE,MAAM;IACdM,IAAI,EAAE;MAAEF;IAAK,CAAC;IACdH,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMa,aAAa,GAAG,MAAOL,EAAE,IAAK;EACzC,MAAMR,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEL,cAAe,IAAGW,EAAG,EAAC;IACpDL,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,eAAe,EAAE;EACnB,CAAC;EAED,OAAO,MAAMb,KAAK,CAACQ,MAAM,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}