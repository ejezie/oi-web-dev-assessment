{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  message: \"\"\n};\nconst messageSlice = createSlice({\n  name: \"message\",\n  initialState,\n  reducers: {\n    setMessage: (state, action) => {\n      return {\n        ...state,\n        message: action.payload\n      };\n    },\n    clearMessage: () => {\n      return {\n        message: \"\"\n      };\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = messageSlice;\nexport const {\n  setMessage,\n  clearMessage\n} = actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","initialState","message","messageSlice","name","reducers","setMessage","state","action","payload","clearMessage","reducer","actions"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/redux/slices/message.slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { message: \"\" };\n\nconst messageSlice = createSlice({\n  name: \"message\",\n  initialState,\n  reducers: {\n    setMessage: (state, action) => {\n      return { ...state, message: action.payload };\n    },\n    clearMessage: () => {\n      return { message: \"\" };\n    }\n  }\n});\n\nconst { reducer, actions } = messageSlice;\n\nexport const { setMessage, clearMessage } = actions;\nexport default reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE;AAAG,CAAC;AAEpC,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAO;QAAE,GAAGD,KAAK;QAAEL,OAAO,EAAEM,MAAM,CAACC;MAAQ,CAAC;IAC9C,CAAC;IACDC,YAAY,EAAEA,CAAA,KAAM;MAClB,OAAO;QAAER,OAAO,EAAE;MAAG,CAAC;IACxB;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAES,OAAO;EAAEC;AAAQ,CAAC,GAAGT,YAAY;AAEzC,OAAO,MAAM;EAAEG,UAAU;EAAEI;AAAa,CAAC,GAAGE,OAAO;AACnD,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}