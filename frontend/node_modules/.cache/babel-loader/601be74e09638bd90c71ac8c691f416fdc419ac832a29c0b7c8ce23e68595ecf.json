{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { CategoryService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\nexport const getCategoriesAction = createAsyncThunk(\"category/all\", async thunkAPI => {\n  try {\n    const response = await CategoryService.getAllCategories();\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const createCategoryAction = createAsyncThunk(\"category/create\", async (title, thunkAPI) => {\n  try {\n    const response = await CategoryService.createCategory(title);\n    toast.success(\"created successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateCategoryAction = createAsyncThunk(\"category/update\", async (_ref, thunkAPI) => {\n  let {\n    title,\n    id\n  } = _ref;\n  try {\n    const response = await CategoryService.updateCategory(title, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const deleteCategoryAction = createAsyncThunk(\"category/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CategoryService.deleteCategory(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst initialState = {};\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // get all categories cases\n    builder.addCase(getCategoriesAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(getCategoriesAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(getCategoriesAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // create category cases\n    builder.addCase(createCategoryAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(createCategoryAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(createCategoryAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // update category cases\n    builder.addCase(updateCategoryAction.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCategoryAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(updateCategoryAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // delete category cases\n    builder.addCase(deleteCategoryAction.pending, state => {\n      state.isLoading = true;\n      state.categoriesData = [];\n    });\n    builder.addCase(deleteCategoryAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(deleteCategoryAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n  }\n});\nconst {\n  reducer\n} = categorySlice;\nexport default reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","toast","CategoryService","formatErrorResponse","getCategoriesAction","thunkAPI","response","getAllCategories","data","error","message","rejectWithValue","createCategoryAction","title","createCategory","success","updateCategoryAction","_ref","id","updateCategory","deleteCategoryAction","deleteCategory","initialState","categorySlice","name","reducers","extraReducers","builder","addCase","pending","state","isLoading","fulfilled","action","categoriesData","payload","rejected","reducer"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/redux/slices/category.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { CategoryService } from \"../../services\";\nimport { formatErrorResponse } from \"../../utils\";\n\nexport const getCategoriesAction = createAsyncThunk(\"category/all\", async (thunkAPI) => {\n  try {\n    const response = await CategoryService.getAllCategories();\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const createCategoryAction = createAsyncThunk(\"category/create\", async (title, thunkAPI) => {\n  try {\n    const response = await CategoryService.createCategory(title);\n    toast.success(\"created successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const updateCategoryAction = createAsyncThunk(\"category/update\", async ({title, id}, thunkAPI) => {\n  try {\n    const response = await CategoryService.updateCategory(title, id);\n    toast.success(\"edited successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const deleteCategoryAction = createAsyncThunk(\"category/delete\", async (id, thunkAPI) => {\n  try {\n    const response = await CategoryService.deleteCategory(id);\n    toast.success(\"deleted successfully\");\n    return response.data;\n  } catch (error) {\n    const message = formatErrorResponse(error);\n    toast.error(message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nconst initialState = {\n};\n\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // get all categories cases\n    builder.addCase(getCategoriesAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(getCategoriesAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(getCategoriesAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // create category cases\n    builder.addCase(createCategoryAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(createCategoryAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(createCategoryAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // update category cases\n    builder.addCase(updateCategoryAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateCategoryAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(updateCategoryAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n\n    // delete category cases\n    builder.addCase(deleteCategoryAction.pending, (state) => {\n      state.isLoading = true;\n      state.categoriesData = []\n    });\n    builder.addCase(deleteCategoryAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.categoriesData = action.payload;\n    });\n    builder.addCase(deleteCategoryAction.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n  },\n});\n\nconst { reducer } = categorySlice;\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}