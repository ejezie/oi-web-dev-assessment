{"ast":null,"code":"import axios from \"axios\";\nimport { devEnv } from \"../configs/environment.config\";\nimport { GET_ALL_POSTS, GET_ONE_POST, NEW_POST, UPDATE_POST, DELETE_POST } from \"./CONSTANTS\";\nexport const getAllPosts = async () => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return await axios(config);\n};\nexport const getSinglePosts = async id => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ONE_POST}/${id}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return await axios(config);\n};\nexport const updatePost = async id => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${UPDATE_POST}/${id}`,\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return await axios(config);\n};\nexport const createPost = async (title, content, author, image) => {\n  const config = {\n    url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}`,\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return await axios(config);\n};","map":{"version":3,"names":["axios","devEnv","GET_ALL_POSTS","GET_ONE_POST","NEW_POST","UPDATE_POST","DELETE_POST","getAllPosts","config","url","API_BASE_URL","method","headers","getSinglePosts","id","updatePost","createPost","title","content","author","image"],"sources":["/Users/macbook/Documents/GitHub/oi-web-dev-assessment/frontend/src/services/post.service.js"],"sourcesContent":["import axios from \"axios\";\nimport { devEnv } from \"../configs/environment.config\";\nimport {\n  GET_ALL_POSTS,\n  GET_ONE_POST,\n  NEW_POST,\n  UPDATE_POST,\n  DELETE_POST,\n} from \"./CONSTANTS\";\n\nexport const getAllPosts = async () => {\n    const config = {\n      url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}`,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    \n    return await axios(config);\n   \n};\n\nexport const getSinglePosts = async (id) => {\n    const config = {\n      url: `${devEnv.API_BASE_URL}${GET_ONE_POST}/${id}`,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    return await axios(config);\n   \n};\n\nexport const updatePost = async (id) => {\n    const config = {\n      url: `${devEnv.API_BASE_URL}${UPDATE_POST}/${id}`,\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    return await axios(config);\n   \n};\n\nexport const createPost = async (title, content, author, image) => {\n    const config = {\n      url: `${devEnv.API_BASE_URL}${GET_ALL_POSTS}`,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    return await axios(config);\n   \n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,+BAA+B;AACtD,SACEC,aAAa,EACbC,YAAY,EACZC,QAAQ,EACRC,WAAW,EACXC,WAAW,QACN,aAAa;AAEpB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAER,aAAc,EAAC;IAC7CS,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,OAAO,MAAMZ,KAAK,CAACQ,MAAM,CAAC;AAE9B,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,MAAMN,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEP,YAAa,IAAGW,EAAG,EAAC;IAClDH,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,OAAO,MAAMZ,KAAK,CAACQ,MAAM,CAAC;AAE9B,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOD,EAAE,IAAK;EACpC,MAAMN,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAEL,WAAY,IAAGS,EAAG,EAAC;IACjDH,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,OAAO,MAAMZ,KAAK,CAACQ,MAAM,CAAC;AAE9B,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,KAAK;EAC/D,MAAMZ,MAAM,GAAG;IACbC,GAAG,EAAG,GAAER,MAAM,CAACS,YAAa,GAAER,aAAc,EAAC;IAC7CS,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,OAAO,MAAMZ,KAAK,CAACQ,MAAM,CAAC;AAE9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}